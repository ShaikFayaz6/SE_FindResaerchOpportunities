<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8">
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <link href="https://fonts.googleapis.com/css?family=Lato:400,700" rel="stylesheet">
    <link rel="icon" type="image/png" href="/images/logo.png">

    <title>Research Finder</title>
    <style>
        /* Google Fonts Import Link */


        
    :root {
      --font: 'Lato', sans-serif;
      --white: #F5F5F5;
      --light: #E0C9CB;
      --tan: #C3A1A0;
      --pink: #D9AAB7;
      --rose: #BA7E7E;
      --dark: #4E4E4E;
    }

    

.notification_wrap{
	width: 500px;
	margin: 10px auto 0;
}

.notification_wrap .notification_icon{
	  position: fixed;
    font-size: 22px;
    margin: 0 auto;
    text-align: center;
    color: #605dff;
    top: 16px;
    right: 70px;
    z-index: 20000;
    display: block;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    cursor: pointer;
    transition: all 200ms linear;
    /* box-shadow: 0 0 25px rgba(255, 235, 167, .45); */
}

.notification_wrap .notification_icon .fa-bell{
	cursor: pointer;
}

.notification_wrap .dropdown{
  top: 40px;
  right: 30px;
  width: 220px;
  height: auto;
  max-height: 200px; /* Limit height */
  overflow-y: auto;  /* Enable scrolling */
  background: #fff;
  border-radius: 5px;
  /* box-shadow: 2px 2px 3px rgba(0,0,0,0.125); */
  margin: 15px auto 0;
  padding: 15px;
  position: fixed;
  display: none;
  z-index: 1;
}
.notification_wrap .dropdown .notify_item{
	display: flex;
	align-items: center;
	padding: 7px 0;
	border-bottom: 1px solid #dbdaff;
}

.notification_wrap .dropdown .notify_item:last-child{
	border-bottom: 0px;
}

.notification_wrap .dropdown .notify_item .notify_img{
	margin-right: 15px;
}

.notification_wrap .dropdown .notify_item .notify_info p{
	margin-bottom: 5px;
}

.notification_wrap .dropdown .notify_item .notify_info p span{
	color: #605dff;
	margin-left: 5px;
}

.notification_wrap .dropdown .notify_item .notify_info .notify_time{
	color: #c5c5e6;
	font-size: 10px;
}

.notification_wrap .dropdown:before{
	content: "";
	position: absolute;
	top: -30px;
	left: 50%;
	transform: translateX(-50%);
	border: 15px solid;
	border-color: transparent transparent #fff transparent;
}

.notification_wrap .dropdown.active{
	display: block;
}

  /* .light-theme {
    --sidebar-background: #008a82;
    --logo-detailscolor: #fff;
    --navlinks-i: #fff; 
    --linkname-color: #fff;
    --submenu-a: #fff;
    --theme-main: #ffffff;
    --profile-details: #005e59;
    --theme-color: #20b2aa;
    --border-color: #18b3aa;
    --background-hover: #31e0d7;
    --home-background: #cde3e2;
    --option-text: #006660;
    --container-background: #f5f5f5;
    --product-text: #4e4e4e;
    --product-shadow: 0px 0px 20px 13px #847fb6;
    --container-shadow: 7px 9px 16px 0px #847fb6;
  } */

  .light-theme {
    --sidebar-background: #005f99;
    --logo-detailscolor: #ffffff;
    --navlinks-i: #ffffff; 
    --linkname-color: #ffffff;
    --submenu-a: #ffffff;
    --theme-main: #ffffff;
    --profile-details: #004080;
    --theme-color: #4a90e2;
    --border-color: #4a90e2;
    --background-hover: #5bb3e6;
    --home-background: #e3eff8;
    --option-text: #004080;
    --container-background: #f5f9fc;
    --product-text: #4e4e4e;
    --product-shadow: 0px 0px 20px 13px #a0b3d6;
    --container-shadow: 7px 9px 16px 0px #a0b3d6;
    --home-header-bg: #cfebff;
}

.dark-theme {
    --sidebar-background: #181825;          /* Dark navy, slightly desaturated for a softer look */
    --logo-detailscolor: #599bdc;           /* Muted blue to give a softer contrast */
    --navlinks-i: #d1d5db;                  /* Light gray for easier readability */
    --linkname-color: #c9ced7;              /* Light gray for link text */
    --submenu-a: #d0d7e5;                   /* Softer gray for submenu items */
    --theme-main: #0f0f14;                  /* Deep dark blue */
    --profile-details: #1d2437;             /* Darker blue for profile background */
    --theme-color: #5aa7e5;                 /* Brighter blue for primary accents */
    --border-color: #445a7a;                /* Muted blue-gray for borders */
    --background-hover: #3a9be6;            /* Lighter shade of blue for hover states */
    --home-background: #191925;             /* Slightly lighter than main background */
    --option-text: #5ba9f2;                 /* Vibrant blue for selectable options */
    --container-background: #232336;        /* Dark gray with a hint of blue */
    --product-text: #f1f1f1;                /* Near-white for readability */
    --product-shadow: 0px 0px 15px 8px #020212; /* Softer shadow for products */
    --container-shadow: 5px 7px 14px 0px #020212; /* Slightly softened shadow */
    --home-header-bg: #13131e;              /* Dark gray-blue for header background */
}


  
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
  outline: none;
  border: none;
}
.sidebar{
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 260px;
  background: var(--sidebar-background);
  z-index: 100;
  transition: all 0.5s ease;
}
.sidebar.close{
  width: 78px;
}
.sidebar .logo-details{
  height: 60px;
  width: 100%;
  display: flex;
  align-items: center;
}
.sidebar .logo-details i{
  font-size: 30px;
  color: var(--logo-detailscolor);
  height: 50px;
  min-width: 78px;
  text-align: center;
  line-height: 50px;
}
.sidebar .logo-details .logo_name{
  font-size: 22px;
  color: var(--logo-detailscolor);
  font-weight: 600;
  transition: 0.3s ease;
  transition-delay: 0.1s;
}
.sidebar.close .logo-details .logo_name{
  transition-delay: 0s;
  opacity: 0;
  pointer-events: none;
}
.sidebar .nav-links{
  height: 100%;
  padding: 30px 0 150px 0;
  overflow: auto;
}
.sidebar.close .nav-links{
  overflow: visible;
}
.sidebar .nav-links::-webkit-scrollbar{
  display: none;
}
.sidebar .nav-links li{
  position: relative;
  list-style: none;
  transition: all 0.4s ease;
}
.sidebar .nav-links li:hover{
  z-index: 2000;
  background: var(--profile-details);
}
.sidebar.light-mode .nav-links li:hover{
  background: var(--profile-details);
}
.sidebar .nav-links li .iocn-link{
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.sidebar.close .nav-links li .iocn-link{
  display: block
}
.sidebar .nav-links li i{
  height: 50px;
  min-width: 78px;
  text-align: center;
  line-height: 50px;
  color: var(--navlinks-i);
  font-size: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
}
.sidebar .nav-links li.showMenu i.arrow{
  transform: rotate(-180deg);
}
.sidebar.close .nav-links i.arrow{
  display: none;
}
.sidebar .nav-links li a{
  display: flex;
  align-items: center;
  text-decoration: none;
}
.sidebar .nav-links li a .link_name{
  font-size: 18px;
  font-weight: 400;
  color: var(--linkname-color);
  transition: all 0.4s ease;
}
.sidebar.close .nav-links li a .link_name{
  opacity: 0;
  pointer-events: none;
}
.sidebar .nav-links li .sub-menu{
  padding: 6px 6px 14px 80px;
  margin-top: -10px;
  background: var(--profile-details);
  z-index: 20000;
  display: none;
}
.sidebar .nav-links li.showMenu .sub-menu{
  display: block;
}
.sidebar .nav-links li .sub-menu a{
  color: var(--submenu-a);
  font-size: 15px;
  padding: 5px 0;
  white-space: nowrap;
  opacity: 0.6;
  transition: all 0.3s ease;
}
.sidebar .nav-links li .sub-menu a:hover{
  opacity: 1;
}
.sidebar.close .nav-links li .sub-menu{
  position: absolute;
  left: 100%;
  top: -10px;
  margin-top: 0;
  padding: 10px 20px;
  border-radius: 0 6px 6px 0;
  opacity: 0;
  display: block;
  pointer-events: none;
  transition: 0s;
}
.sidebar.close .nav-links li:hover .sub-menu{
  top: 0;
  opacity: 1;
  pointer-events: auto;
  transition: all 0.4s ease;
}
.sidebar .nav-links li .sub-menu .link_name{
  display: none;
}
.sidebar.close .nav-links li .sub-menu .link_name{
  font-size: 18px;
  opacity: 1;
  display: block;
}
.sidebar .nav-links li .sub-menu.blank{
  opacity: 1;
  pointer-events: auto;
  padding: 3px 20px 6px 16px;
  opacity: 0;
  pointer-events: none;
}
.sidebar .nav-links li:hover .sub-menu.blank{
  top: 50%;
  transform: translateY(-50%);
}

.sidebar .profile-details{
  position: fixed;
  bottom: 0;
  width: 260px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: var(--profile-details);
  padding: 12px 0;
  transition: all 0.5s ease;
}
.sidebar.close .profile-details{
  background: none;
}
.sidebar.close .profile-details{
  width: 78px;
}
.sidebar .profile-details .profile-content{
  display: flex;
  align-items: center;
}
.sidebar .profile-details img{
  height: 52px;
  width: 52px;
  object-fit: cover;
  border-radius: 16px;
  margin: 0 14px 0 12px;
  background: #1d1b31;
  transition: all 0.5s ease;
}
.sidebar.close .profile-details img{
  padding: 10px;
}
.sidebar .profile-details .profile_name,
.sidebar .profile-details .job{
  color: var(--linkname-color);
  font-size: 18px;
  font-weight: 500;
  white-space: nowrap;
}
.sidebar.close .profile-details i,
.sidebar.close .profile-details .profile_name,
.sidebar.close .profile-details .job{
  display: none;
}
.sidebar .profile-details .job{
  font-size: 12px;
}

.dark-light {
  display: none; /* Hide the checkbox */
}

.dark-light:checked + label,
.dark-light:not(:checked) + label{
  position: fixed;
  top: 13px;
  right: 6px;
  z-index: 20000;
  display: block;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  cursor: pointer;
  transition: all 200ms linear;
  box-shadow: 0 0 25px rgba(255,235,167,.45);
}
.dark-light:checked + label{
  transform: rotate(360deg);
}
.dark-light:checked + label:after,
.dark-light:not(:checked) + label:after{
  position: absolute;
  content: '';
  top: 1px;
  left: 1px;
  overflow: hidden;
  z-index: 2;
  display: block;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  background-color: #102770;
  background-image: url('https://assets.codepen.io/1462889/moon.svg');
  background-size: 16px 16px;
  background-repeat: no-repeat;
  background-position: center;
  transition: all 200ms linear;
  opacity: 0;
}
.dark-light:checked + label:after {
  opacity: 1;
}
.dark-light:checked + label:before,
.dark-light:not(:checked) + label:before{
  position: absolute;
  content: '';
  top: 0;
  left: 0;
  overflow: hidden;
  z-index: 1;
  display: block;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  background-color: #def9fe;
  background-image: url('https://assets.codepen.io/1462889/sun.svg');
  background-size: 22px 22px;
  background-repeat: no-repeat;
  background-position: center;
  transition: all 200ms linear;
}
.dark-light:checked + label:before{
  background-color: #000;
}

.home-section{
  position: relative;
	background-color: var(--home-background);
  background-size: cover;
  background-position: center;
  height: 100vh;
  left: 260px;
  width: calc(100% - 260px);
  transition: all 0.5s ease;
}
.sidebar.close ~ .home-section{
  left: 78px;
  width: calc(100% - 78px);
}


.home-section .home-content .bx-menu,
.home-section .home-content .text input{
  color: #11101d;
  font-size: 35px;
}
.home-section .home-content .bx-menu{
  margin: 0 15px;
  cursor: pointer;
  color: var(--theme-color);
}
.home-section .home-content .text {
  font-size: 26px;
  font-weight: 600;
}

.home-section .home-content {
  margin-bottom: 10px;
    position: fixed;
    top: 0;
    z-index: 10;
    width: 100%;
    background: var(--home-header-bg);
    padding-bottom: 22px;
    height: 180px;
}


.search-button i {
  font-size: 1rem;
} */

.notification-message {
  font-size: 13px;
  font-weight: 500;
  color: #11101d;
}



    .containers {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      gap: 20px;
      position: relative;
      margin-top: 110px;
      padding: 10px;
      background: var(--home-background);
      padding-top: 90px;
      padding-bottom: 33px;
    }

    .container {
      position: relative;
      margin: auto;
      overflow: hidden;
      width: 290px;
      height: 350px;
      background: var(--container-background);
      box-shadow: var(--container-shadow);
      border-radius: 10px;
    }

    .ribbon {    
      position: absolute;
      width: 40px;
      height: 40px;
      top: 10px;
      right: 5px;
    }

    .container:hover {
      transform: translateY(-5px);
      transition: all 0.4s ease-in-out;
      cursor: cell;
    }

    .product-p {
      font-size: 0.6em;
      color: var(--theme-color);
      letter-spacing: 1px;
      margin-top: 9.6px;
      margin-bottom: 9.6px;
    }

    .product-pl {
      font-size: 1em;
      color: var(--theme-color);
      letter-spacing: 1px;
    }

    .product-p2 {
      font-size: 0.7em;
      color: var(--product-text);
      letter-spacing: 1px;
    }


    .product-h1 {
      font-size: 1.2em;
      color: var(--product-text);
      margin-top: -5px;
      margin-bottom: 12.86px;
    }

    .product-h2 {
      color: var(--tan);
      margin-top: -5px;
        margin-bottom: 19.92px;
    }

    .product {
      position: absolute;
      width: 92%;
      height: 90%;
      top: 7%;
      left: 4%;
      right: 4%;
      margin: auto;
    }

    .product-desc {
      text-transform: none;
      letter-spacing: 0;
      margin-top: 11.2px;
      margin-bottom: 17px;
      color: var(--product-text);
      font-size: .7em;
      line-height: 1.6em;
      margin-right: 10px;
      text-align: justify;
    }

    .product-buttons {
      margin-top: 3px;
      position: absolute;
      bottom: 3%;
      left: 5%;
      width: 97%;
    }

      .popup-container {
        position: fixed;
        top: 26%;
        left: 34%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
      }

      .product-selected {
          background: var(--container-background);
          box-shadow: var(--product-shadow);
          border-radius: 10px;
          padding: 20px;
          width: 500px;
          height: auto;
      }

    

    .product-button-add, .product-button-like {
      /* background: darken(var(--light), 10%); */
      background-color: var(--theme-color);
      padding: 10px;
      display: inline-block;
      outline: 0;
      border: 0;
      /* margin: -1px; */
      border-radius: 2px;
      text-transform: uppercase;
      letter-spacing: 1px;
      color: var(--container-background);
      cursor: pointer;
    }

    .product-button-add:hover, .product-button-like:hover {
      background: var(--background-hover);
      transition: all .4s ease-in-out;
    }

    .product-button-add {
      width: 67%;
    }

    .product-button-like {
      width: 22%;
    }
    
    .hidden {
      display: none;
    }

    .pagination {    
      display: flex;
    justify-content: center;
    background-color: var(--home-background);
    padding: 10px;
    }

    .pagination ul{
      width: auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    background: var(--theme-main);
    padding: 8px;
    border-radius: 50px;
    box-shadow: 0px 10px 15px rgba(0, 0, 0, 0.1);
    position: relative;
}
.pagination ul li{
  color: var(--theme-color);
  list-style: none;
  line-height: 45px;
  text-align: center;
  font-size: 18px;
  font-weight: 500;
  cursor: pointer;
  user-select: none;
  transition: all 0.3s ease;
}
.pagination ul li.numb{
  list-style: none;
  height: 45px;
  width: 45px;
  margin: 0 3px;
  line-height: 45px;
  border-radius: 50%;
}
.pagination ul li.numb.first{
  margin: 0px 3px 0 -5px;
}
.pagination ul li.numb.last{
  margin: 0px -5px 0 3px;
}
.pagination ul li.dots{
  font-size: 22px;
  cursor: default;
}
.pagination ul li.btn{
  padding: 0 20px;
  border-radius: 50px;
}
.pagination li.active,
.pagination ul li.numb:hover,
.pagination ul li:first-child:hover,
.pagination ul li:last-child:hover{
  color: var(--theme-main);
  background: var(--theme-color);
}


.search-wrapper {
    width: 63%;
    margin: 0 auto;
    position: fixed;
    left: 27%;
    padding-left: 0px;
    padding-right: 0px;
    margin-top: -10px;
}

#search-container {
  margin: 1em 0;
}
#search-container input {
  background-color: transparent;
  width: 60%;
  border-bottom: 2px solid #110f29;
  padding: 1em 0.3em;
  color: var(--product-text);
}
#search-container input:focus {
  border-bottom-color: var(--theme-color);
}
#search-container button {
  padding: 1em 2em;
  margin-left: 1em;
  background-color: var(--theme-color);
  color: var(--theme-main);
  border-radius: 5px;
  margin-top: 0.5em;
  cursor: pointer;
}

#search-container button:hover {
  background-color: var(--background-hover);
}

.filter-button {
  border: 2px solid var(--border-color);
  padding: 1em 2.2em;
  border-radius: 3em;
  background-color: transparent;
  color: var(--theme-color);
  cursor: pointer;
}

.clear-button {
  border: 2px solid var(--border-color);
  padding: 1em 2.2em;
  border-radius: 3em;
  background-color: transparent;
  color: var(--theme-color);
  cursor: no-drop;
}

.clear-button.active {
  background-color: var(--theme-color);
  color: var(--theme-main);
}

.clear-button.active:hover {
  background-color: var(--background-hover);
  color: var(--theme-main);
  cursor: pointer;
}

.filter-button.active {
  background-color: var(--theme-color);
  color: var(--theme-main);
}

.filter-button:hover {
  background-color: var(--theme-color);
  color: var(--theme-main);
}

.filter-button-container {
  position: relative;
  display: inline-block;
}

.filter-button-container .filter-dropdown {
    display: none;
    position: absolute;
    background-color: var(--theme-main);
    /* border: 1px solid var(--theme-color); */
    border-radius: 5px;
    padding: 12px;
    top: 3em;
    z-index: 100;
    width: 100%;
    min-width: max-content;
}

.filter-button-container:hover .filter-dropdown {
  display: block;
}

.filter-dropdown {
  display: none;
}

.filter-dropdown .option{
    display: flex;
    height: 27px;
    cursor: pointer;
    padding: 0px 8px;
    border-radius: 8px;
    align-items: center;
    background: var(--theme-main);
}
.filter-dropdown .option:hover{
    background: #F2F2F2;
}
.option i{
    font-size: 25px;
    margin-right: 12px;
}
.option .option-text{
    font-size: 12px;
    color: var(--option-text);
}


.active {
  background-color: var(--home-header-bg);
  color: var(--theme-main);
}
#products {
  display: grid;
  grid-template-columns: auto auto auto;
  grid-column-gap: 1.5em;
  padding: 2em 0;
}
.card {
  background-color: var(--theme-main);
  max-width: 18em;
  margin-top: 1em;
  padding: 1em;
  border-radius: 5px;
  box-shadow: 1em 2em 2.5em rgba(1, 2, 68, 0.08);
}
.image-container {
  text-align: center;
}
img {
  max-width: 100%;
  object-fit: contain;
  height: 15em;
}
.container {
  padding-top: 1em;
  color: #110f29;
}
.container h5 {
  font-weight: 500;
}
.hide {
  display: none;
}

#startVoiceNav {
    position: fixed;
    font-size: 27px;
    margin: 0 auto;
    text-align: center;
    color: #605dff;
    top: 15px;
    right: 40px;
    z-index: 20000;
    display: block;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    cursor: pointer;
    transition: all 200ms linear;
    /* box-shadow: 0 0 25px rgba(255, 235, 167, .45); */
}

@media screen and (max-width: 720px) {
  img {
    max-width: 100%;
    object-fit: contain;
    height: 10em;
  }
  .card {
    max-width: 10em;
    margin-top: 1em;
  }
  #products {
    grid-template-columns: auto auto;
    grid-column-gap: 1em;
  }
}




@media (max-width: 420px) {
  .sidebar.close .nav-links li .sub-menu{
    display: none;
  }
}

.to {
    width: 14%;
    margin: 0 auto;
    position: fixed;
    padding-left: 0px;
    padding-right: 0px;
    margin-top: -7px;
    right: 105px;
    z-index: 1;
}

.dropdown-container {
  position: relative;
  margin-bottom: 10px;
  width: 100%;
}
.dropdown-container .dropdown-toggle {
    display: flex;
    align-items: center;
    padding: 10px 9px;
    border-radius: 30px;
    background-color: var(--container-background);
    cursor: pointer;
    transition: all 0.3s;
    margin-top: -30px;
    color: var(--product-text);
    z-index: 100;
}
.dropdown-container .dropdown-toggle span {
  flex: 1;
  margin-left: 10px;
}
.dropdown-container .dropdown-toggle ion-icon {
  font-size: 20px;
  transition: transform 0.3s ease;
}
.dropdown-container.active .dropdown-toggle {
  border-radius: 20px 20px 0 0;
}
.dropdown-container.active .dropdown-toggle ion-icon:last-child {
  transform: rotate(180deg);
}
.dropdown-container .dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 300px;
  overflow: auto;
  display: none;
  padding: 20px;
  z-index: 1;
  list-style: none;
  flex-direction: column;
  background-color: var(--container-background);
  transition: all 1s;
  border-radius: 0 0 20px 20px;
}
.dropdown-container .dropdown-menu::-webkit-scrollbar {
  display: none;
}
.dropdown-container.active .dropdown-menu {
  display: flex;
}

.dropdown-container .dropdown-menu li {
  padding: 10px 20px;
  border-radius: 20px;
  cursor: pointer;
  margin-bottom: 5px;
  border-bottom: 1px solid var(--home-background);
  transition: all 0.3s ease;
  color: var(--product-text);
}
.dropdown-container .dropdown-menu li:hover {
  background-color: var(--home-background);
}
.dropdown-container .dropdown-menu li.active {
  color: var(--product-text);
  background-color: var(--home-background);
}

    </style>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
	<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script
      type="module"
      src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"
    ></script>
    <script
      nomodule
      src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"
    ></script>
	<script>
		$(document).ready(function(){
			$(".notification_icon .fa-bell").click(function(){
				$(".dropdown").toggleClass("active");
			})
		});
	</script>
  </head>
<body>

  <div class="sidebar close">
    <div class="logo-details">
      <!-- <img src="logo.png" alt="" class="logo-image"> -->
      <i class='bx bx-grid-alt' ></i>
      <span  data-translate="true" class="logo_name">Research Finder</span>
    </div>
    <ul class="nav-links">


      <!-- <li>
        <a href="#">
          <i class='bx bx-grid-alt' ></i>
          <span class="link_name">Dashboard</span>
        </a>
        <ul class="sub-menu blank">
          <li><a class="link_name" href="#">Category</a></li>
        </ul>
      </li> -->

      <!-- <li>
        <div class="iocn-link">
          <a href="#">
            <i class='bx bx-book-alt' ></i>
            <span class="link_name">Posts</span>
          </a>
          <i class='bx bxs-chevron-down arrow' ></i>
        </div>
        <ul class="sub-menu">
          <li><a class="link_name" href="#">Posts</a></li>
          <li><a href="#">Web Design</a></li>f
          <li><a href="#">Login Form</a></li>
          <li><a href="#">Card Design</a></li>
        </ul>
      </li> -->

      <% if (role === 'admin') { %>  
        <li>
          <a href="/add-opportunity" id="addOpportunityPage">
            <i class='bx bx-add-to-queue' ></i>
            <span data-translate="true"  class="link_name">Post Opportunity</span>
          </a>
          <ul class="sub-menu blank">
            <li><a  data-translate="true" class="link_name" href="#">Post</a></li>
          </ul>
        </li>
  <% } %> 

  <li>
    <a href="/chat" id="chatPage">
      <i class='bx bx-conversation'></i>
      <span  data-translate="true" class="link_name">Chat</span>
    </a>
    <ul class="sub-menu blank">
      <li><a  data-translate="true" class="link_name" href="#">Chat</a></li>
    </ul>
  </li>

      <li>
        <a href="/feedback" id="feedbackPage">
          <i class='bx bx-message-alt-detail' ></i>
          <span  data-translate="true" class="link_name">FeedBack</span>
        </a>
        <ul class="sub-menu blank">
          <li><a  data-translate="true" class="link_name" href="#">FeedBack</a></li>
        </ul>
      </li>
      
      <!-- <li>
        <a href="/tempcheck">
          <i class='bx bx-coffee' ></i>
          <span class="link_name">tempcheck</span>
        </a>
        <ul class="sub-menu blank">
          <li><a class="link_name" href="#">tempcheck</a></li>
        </ul> -->
      <!-- </li> -->

      <li>
        <a href="/profile" id="profilePage">
          <i class='bx bx-user-circle' ></i>
          <span  data-translate="true" class="link_name">Profile</span>
        </a>
        <ul class="sub-menu blank">
          <li><a data-translate="true"  class="link_name" href="#">Profile</a></li>
        </ul>
      </li>


      <li>
        <div class="profile-details">
          <div class="profile-content">
            <!--<img src="image/profile.jpg" alt="profileImg">-->
          </div>
          <div class="name-job">
            <div  data-translate="true" class="profile_name"><%= profileName %></div>
            <div  data-translate="true" class="job"><%= jobTitle %></div>
          </div><a href="/logout">
            <i class='bx bx-log-out'></i>
            <span class="link_name"> </span>
        </a>
        </div>
      </li>

    </ul>
  </div>

  <section class="home-section">

    <div class="home-content">
        <i class='bx bx-menu' ></i>
            
        <div class="wrapper">
            <div class="notification_wrap">
                <div class="notification_icon">
                    <i class="fas fa-bell"></i>
                </div>
                <div class="dropdown">

                    <% notifications.forEach(notification => { %>
                        <div class="notify_item">
                            <div class="notify_info">
                                <p data-translate="true"  class="notification-message"><%= notification.message %></p>
                                <span class="notify_time"><%= new Date(notification.timestamp.seconds * 1000).toLocaleTimeString() %></span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
    

            <input class="dark-light" type="checkbox" id="dark-light" name="dark-light"/>
            <label for="dark-light"></label>  

            <i class='bx bxs-user-voice' id="startVoiceNav"></i>
        </div>

        <div class="to">
            <div class="dropdown-container" id="output-language">
              <div class="dropdown-toggle">
                <ion-icon name="globe-outline"></ion-icon>
                <span class="selected" data-value="en">Englsih</span>
                <ion-icon name="chevron-down-outline"></ion-icon>
              </div>
              <ul class="dropdown-menu">
                <li class="option active">DropDown Menu Item 1</li>
                <li class="option">DropDown Menu Item 2</li>
              </ul>
            </div>
          </div>


        <div class="search-wrapper">
          <div id="search-container">
            <input
              type="search"
              class="search-bar"
              id="search-input"
              placeholder="Search opportunities here.."
              onkeydown="handleSearchEnter(event)"
              data-translate="true"
            />
            <button data-translate="true" id="search" onclick="searchOpportunities()">Search</button>
          </div>

          <div id="buttons">
            <div class="filter-button-container" id="work-mode">
                <button data-translate="true"  class="filter-button" id="work-mode-button">
                  work-mode
                </button>
                <div class="filter-dropdown">
                  <li class="option" onclick="addMode('on-site')">
                    <span  data-translate="true" class="option-text">on-site</span>
                  </li>
                  <li class="option" onclick="addMode('remote')">
                    <span data-translate="true"  class="option-text">remote</span>
                  </li>
                  <li class="option" onclick="addMode('hybrid')">
                    <span  data-translate="true" class="option-text">hybrid</span>
                  </li>
                  <li class="option" onclick="addMode('any')">
                    <span  data-translate="true" class="option-text">any</span>
                  </li>
                </div>
            </div>
            <div class="filter-button-container" id="work-type">
                <button  data-translate="true" class="filter-button" id="work-type-button">
                  work-type
                </button>
                <div class="filter-dropdown">
                  <li class="option" onclick="addType('full-time')">
                    <span data-translate="true"  class="option-text">full-time</span>
                  </li>
                  <li class="option" onclick="addType('part-time')">
                    <span  data-translate="true" class="option-text">part-time</span>
                  </li>
                  <li class="option" onclick="addType('internship')">
                    <span  data-translate="true" class="option-text">internship</span>
                  </li>
                  <li class="option" onclick="addType('any')">
                    <span  data-translate="true" class="option-text">any</span>
                  </li>
                </div>
            </div>
            <div class="filter-button-container" id="duration">
              <button  data-translate="true" class="filter-button" id="duration-button">
                duration
              </button>
              <div class="filter-dropdown">
                <li class="option" onclick="addDuration('1-3 months')">
                  <span  data-translate="true" class="option-text">1-3 months</span>
                </li>
                <li class="option" onclick="addDuration('3-6 months')">
                  <span  data-translate="true" class="option-text">3-6 months</span>
                </li>
                <li class="option" onclick="addDuration('6-12 months')">
                  <span  data-translate="true" class="option-text">6-12 months</span>
                </li>
                <li class="option"  onclick="addDuration('12+ months')">
                  <span  data-translate="true" class="option-text">12+ months</span>
                </li>
                <li class="option"  onclick="addDuration('any')">
                  <span  data-translate="true" class="option-text">any</span>
                </li>
              </div>
            </div>
            <div class="filter-button-container" id="stipend">
              <button  data-translate="true" class="filter-button" id="stipend-button">
                stipend
              </button>
              
              <div class="filter-dropdown">
                <li class="option"  onclick="addStipend('$0-1,000')">
                  <span  data-translate="true" class="option-text">$0-1,000</span>
                </li>
                <li class="option"  onclick="addStipend('$1,000-2,000')">
                  <span  data-translate="true" class="option-text">$1,000-2,000</span>
                </li>
                <li class="option"  onclick="addStipend('$2,000-3,000')">
                  <span data-translate="true"  class="option-text">$2,000-3,000</span>
                </li>
                <li class="option"  onclick="addStipend('$3,000+')">
                  <span data-translate="true"  class="option-text">$3,000+</span>
                </li>
                <li class="option" onclick="addStipend('any')">
                  <span data-translate="true"  class="option-text">any</span>
                </li>
              </div>
            </div>

            <div class="filter-button-container" id="clear">
              <button  data-translate="true" class="clear-button" onclick="clearFilters()" id="clear-button-id">
                Clear Filters
              </button>
            </div>
            </div>
          </div>


        </div>




    </div>

    <div class="containers" id="opportunitiesContainer"></div>
    
    <div class="pagination" id="paginationControls">
      <!-- Pagination buttons will be here -->
      <ul> <!--pages or li are comes from javascript --> </ul>
  </div>

    <!-- <div class="searchResults"></div> -->

    <div class="popup-container" style="display: none;"></div>

  </section>
  
  <div class="one"></div>
  

  <!-- <script src="opportunites.mjs" type="module"></script> -->

  
  <script src="languages.js" ></script> 
  <script type="module" src="translation.mjs"></script>
  <script type="module">
    import { makeTranslate, translateElements } from './translation.mjs';
    window.firebaseConfig = JSON.parse('<%- firebaseConfig %>');
    window.opportunityData = JSON.parse('<%- opportunityData %>');  
    window.role = '<%= role %>';
    
    // import { getRecommendations } from '../../backend/pinecone.js';
window.filteredOpportunities = window.opportunityData;
window.filteredOpportunities_1 = window.opportunityData;
window.filteredOpportunities_2 = window.opportunityData;
window.filteredOpportunities_3 = window.opportunityData;
window.filteredOpportunities_4 = window.opportunityData;

console.log(window.opportunityData);

// window.recommendations = getRecommendations(window.opportunityData, interests);


const itemsPerPage = 12;
let currentPage = 1;


function addMode(mode) {
  const button = document.getElementById("work-mode-button");
  button.innerHTML = mode;
  button.classList.add('active');
  const clearButton = document.getElementById("clear-button-id");
  clearButton.classList.add('active');


  const filteredOpportunities_1 = Object.keys(window.filteredOpportunities).reduce((acc, key) => {
    const opportunity = window.filteredOpportunities[key];
    if (mode === 'any') {
      acc[key] = opportunity;
    } else if (opportunity.mode === mode) {
      acc[key] = opportunity;
    }
    return acc;
  }, {});
  window.filteredOpportunities_1 = filteredOpportunities_1;

  console.log('loading filtered opportunities');

  filterAllOpportunities();
}

function addType(type) {
  const button = document.getElementById("work-type-button");
  button.innerHTML = type;
  button.classList.add('active');
  const clearButton = document.getElementById("clear-button-id");
  clearButton.classList.add('active');

  
  const filteredOpportunities_2 = Object.keys(window.filteredOpportunities).reduce((acc, key) => {
    const opportunity = window.filteredOpportunities[key];
    if (type === 'any') {
      acc[key] = opportunity;
    } else if (opportunity.type === type) {
      acc[key] = opportunity;
    }
    return acc;
  }, {});
  window.filteredOpportunities_2 = filteredOpportunities_2;

  console.log('loading filtered opportunities');

  filterAllOpportunities();
}

function addDuration(duration) {
  const button = document.getElementById("duration-button");
  button.innerHTML = duration;
  button.classList.add('active');
  const clearButton = document.getElementById("clear-button-id");
  clearButton.classList.add('active');

  var minVal = 0;
  var maxVal = 1000000;

  if (duration === '1-3 months') {
    var minVal = 1;
    var maxVal = 3;
  } else if (duration === '3-6 months') {
    var minVal = 3;
    var maxVal = 6;
  } else if (duration === '6-12 months') {
    var minVal = 6;
    var maxVal = 12;
  } else if (duration === '12+ months') {
    var minVal = 12;
    var maxVal = 1000000;
  }

  const filteredOpportunities_3 = Object.keys(window.filteredOpportunities).reduce((acc, key) => {
    const opportunity = window.filteredOpportunities[key];
    if (duration === 'any') {
      acc[key] = opportunity;
      console.log(opportunity.duration);
    } else if (opportunity.duration >= minVal && opportunity.duration <= maxVal) {
      acc[key] = opportunity;
    }
    return acc;
  }, {});
  window.filteredOpportunities_3 = filteredOpportunities_3;

  console.log('loading filtered opportunities');

  filterAllOpportunities();
}

function addStipend(stipend) {
  const button = document.getElementById("stipend-button");
  button.innerHTML = stipend;
  button.classList.add('active');
  const clearButton = document.getElementById("clear-button-id");
  clearButton.classList.add('active');

  var minVal = 0;
  var maxVal = 1000000;
  if (stipend === '$0-1,000') {
    var minVal = 0;
    var maxVal = 1000;
  } else if (stipend === '$1,000-2,000') {
    var minVal = 1000;
    var maxVal = 2000;
  } else if (stipend === '$2,000-3,000') {
    var minVal = 2000;
    var maxVal = 3000;
  } else if (stipend === '$3,000+') {
    var minVal = 3000;
    var maxVal = 1000000;
  }

  const filteredOpportunities_4 = Object.keys(window.filteredOpportunities).reduce((acc, key) => {
    const opportunity = window.filteredOpportunities[key];
    if (stipend === 'any') {
      acc[key] = opportunity;
    } else if (opportunity.stipend >= minVal && opportunity.stipend <= maxVal) {
      acc[key] = opportunity;
    }
    return acc;
  }, {});
  window.filteredOpportunities_4 = filteredOpportunities_4;

  console.log('loading filtered opportunities');

  filterAllOpportunities();
}

function clearFilters() {
  const buttons = document.querySelectorAll('.filter-button');
  buttons.forEach(button => {
    button.classList.remove('active');
    const lastIndex = button.id.lastIndexOf('-');
    button.innerHTML = button.id.substring(0, lastIndex);
  });
  const clearButton = document.getElementById("clear-button-id");
  clearButton.classList.remove('active');

  window.filteredOpportunities_1 = window.filteredOpportunities;
  window.filteredOpportunities_2 = window.filteredOpportunities;
  window.filteredOpportunities_3 = window.filteredOpportunities;
  window.filteredOpportunities_4 = window.filteredOpportunities;

  createPagination(currentPage, window.filteredOpportunities);
  loadOpportunities(window.filteredOpportunities, currentPage);
}


function filterAllOpportunities() {
  console.log('filtering all opportunities');
  const keys_1 = Object.keys(window.filteredOpportunities_1);
  const keys_2 = Object.keys(window.filteredOpportunities_2);
  const keys_3 = Object.keys(window.filteredOpportunities_3);
  const keys_4 = Object.keys(window.filteredOpportunities_4);
  const allKeys = [...keys_1, ...keys_2, ...keys_3, ...keys_4];

  const keys = allKeys.filter(key => keys_1.includes(key) && keys_2.includes(key) && keys_3.includes(key) && keys_4.includes(key));
  const newFilteredOpportunities = keys.reduce((acc, key) => {
    acc[key] = window.filteredOpportunities[key];
    return acc;
  }, {});

  createPagination(currentPage, newFilteredOpportunities);
  loadOpportunities(newFilteredOpportunities, currentPage);
}



function createPagination(page, opportunites) {
        const paginationControls = document.querySelector(".pagination ul");
        paginationControls.innerHTML = ''; // Clear existing pagination controls

        let totalPages = Math.ceil(Object.keys(opportunites).length / itemsPerPage);
        let beforePage = page - 1;
        let afterPage = page + 1;
    
        if (page > 1) {
            const prevButton = document.createElement('li');
            prevButton.classList.add('btn', 'prev');
            prevButton.innerHTML = '<span><i class="fas fa-angle-left"></i> Prev</span>';
            prevButton.addEventListener('click', function() {
                createPagination(page - 1, opportunites);
                loadOpportunities(opportunites, page - 1);
            });
            paginationControls.appendChild(prevButton);
        }
    
        if (page > 2) {
            const firstPageButton = document.createElement('li');
            firstPageButton.classList.add('numb');
            firstPageButton.innerHTML = '<span>1</span>';
            firstPageButton.addEventListener('click', function() {
                createPagination(1, opportunites);
                loadOpportunities(opportunites, 1);
            });
            paginationControls.appendChild(firstPageButton);
    
            if (page > 3) {
                const dots = document.createElement('li');
                dots.classList.add('dots');
                dots.innerHTML = '<span>...</span>';
                paginationControls.appendChild(dots);
            }
        }
    
        if (page === totalPages) {
            beforePage = page - 1;
        }
    
        if (page === 1) {
            afterPage = page + 1;
        }
    
        for (let plength = beforePage; plength <= afterPage; plength++) {
            if (plength > totalPages) {
                continue;
            }
            if (plength === 0) {
                plength = plength + 1;
            }
            const pageButton = document.createElement('li');
            pageButton.classList.add('numb');
            if (page === plength) {
                pageButton.classList.add('active');
            }
            pageButton.innerHTML = `<span>${plength}</span>`;
            pageButton.addEventListener('click', function() {
                createPagination(plength, opportunites);
                loadOpportunities(opportunites, plength);
            });
            paginationControls.appendChild(pageButton);
        }
    
        if (page < totalPages - 1) {
            if (page < totalPages - 2) {
                const dots = document.createElement('li');
                dots.classList.add('dots');
                dots.innerHTML = '<span>...</span>';
                paginationControls.appendChild(dots);
            }
            const lastPageButton = document.createElement('li');
            lastPageButton.classList.add('numb');
            lastPageButton.innerHTML = `<span>${totalPages}</span>`;
            lastPageButton.addEventListener('click', function() {
                createPagination(totalPages, opportunites);
                loadOpportunities(opportunites, totalPages);
            });
            paginationControls.appendChild(lastPageButton);
        }
    
        if (page < totalPages) {
            const nextButton = document.createElement('li');
            nextButton.classList.add('btn', 'next');
            nextButton.innerHTML = '<span>Next <i class="fas fa-angle-right"></i></span>';
            nextButton.addEventListener('click', function() {
                createPagination(page + 1, opportunites);
                loadOpportunities(opportunites, page + 1);
            });
            paginationControls.appendChild(nextButton);
        }
    }



function loadOpportunities(opportunities, page) {
  console.log('opportunities ', opportunities);
  let containers = document.querySelector('.containers');
  containers.innerHTML = '';

  const start = (page - 1) * itemsPerPage;
  const end = start + itemsPerPage;
  const keys = Object.keys(opportunities).slice(start, end);
  // const keys = Object.keys(opportunities);
  keys.forEach(key => {
    const opportunity = opportunities[key];
    let container = document.createElement('div');
    container.classList.add('container');
    container.setAttribute("Opportunity-ID", key);
    container.innerHTML = `
      <div class="product">
        <p class="product-p" data-translate="true"  name="topic">${opportunity.topic}</p>
        <h2 class="product-h1" data-translate="true"  name="title">${opportunity.title}</h2>
        <p class="product-pl" data-translate="true"  name="location">${opportunity.location}</p>
        <p class="product-desc" data-translate="true" name="shortDescription">${opportunity.shortDescription}</p>
        <p class="product-p2" data-translate="true"  name="stipend">stipend:  $${opportunity.stipend} /month</p>
        <p class="product-p2" data-translate="true"  name="duration">duration: ${opportunity.duration} months </p>
        <p class="product-p2" data-translate="true"  name="mode">work-mode: ${opportunity.mode} </p>
        <p class="product-p2" data-translate="true"  name="type">work-type: ${opportunity.type} </p>
        <div class="product-buttons">
          <button data-translate="true"  class="product-button-add" type="button" onclick="window.open('${opportunity.link}', '_blank')">Apply Now</button>
          <button data-translate="true"  class="product-button-like" type="button"><span>♥</span></button>
        </div>
      </div>
    `;

    if (opportunity.recommend) {
        const img = document.createElement('img');
        img.src = 'images/recommended.png';
        img.className = 'ribbon';
        img.alt = '';
        container.appendChild(img);
    }

    containers.appendChild(container);
  });

  attachEventListeners();

  makeTranslate();
}


async function handleSearchEnter() {
  if (event.key === 'Enter') {
    searchOpportunities();
  }
}

async function searchOpportunities(bysearch = true) {
  const searchInput = document.getElementById('search-input');
  const searchValue = searchInput.value.toLowerCase();
  console.log('searchValue ', searchValue);
  if (!searchValue) {
    return;
  }

  searchOpportunitiesINP(searchValue, bysearch);
}

async function searchOpportunitiesINP(searchValue, bysearch) {
  if (bysearch) {
    const newUrl = `${window.location.origin}${window.location.pathname}?s=${encodeURIComponent(searchValue)}`;
    history.pushState({ path: newUrl }, '', newUrl);
  }

  console.log(history);
  console.log("******************************************");
  const filteredOpportunities = Object.keys(window.opportunityData).reduce((acc, key) => {
    const opportunity = window.opportunityData[key];
    if (opportunity.title.toLowerCase().includes(searchValue) || 
        opportunity.topic.toLowerCase().includes(searchValue) || 
        opportunity.location.toLowerCase().includes(searchValue) || 
        opportunity.institution.toLowerCase().includes(searchValue) ||
        opportunity.shortDescription.toLowerCase().includes(searchValue) ||
        opportunity.tags.includes(searchValue)) {
        acc[key] = opportunity;
    }
    return acc;
  }, {});
  
  window.filteredOpportunities = filteredOpportunities;
  clearFilters();

  console.log('loading filtered opportunities');

  createPagination(currentPage, filteredOpportunities);
  loadOpportunities(filteredOpportunities, currentPage);
}


let arrow = document.querySelectorAll(".arrow");
for (var i = 0; i < arrow.length; i++) {
  arrow[i].addEventListener("click", (e)=>{
    let arrowParent = e.target.parentElement.parentElement;//selecting main parent of arrow
    arrowParent.classList.toggle("showMenu");
  });
}

let sidebar = document.querySelector(".sidebar");
let sidebarBtn = document.querySelector(".bx-menu");
sidebarBtn.addEventListener("click", ()=>{
  sidebar.classList.toggle("close");
});


const themeToggle = document.getElementById("dark-light");
const body = document.body;

// Load the preferred theme from localStorage (if available)
const savedTheme = localStorage.getItem('theme') || 'dark-theme';
body.classList.add(savedTheme);
themeToggle.checked = savedTheme === 'light-theme';

// Listen for the toggle change event
themeToggle.addEventListener("change", () => {
  if (themeToggle.checked) {
    body.classList.remove('dark-theme');
    body.classList.add('light-theme');
    localStorage.setItem('theme', 'light-theme');

    const selectedTheme = 'light-theme';

    fetch('/set-theme', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ theme: selectedTheme })
    })
    .then(response => response.json())
    .then(data => {
      if (!data.success) {
        console.error('Error setting theme on server');
      }
    })
    .catch(error => console.error('Error setting theme:', error));

  } else {
    body.classList.remove('light-theme');
    body.classList.add('dark-theme');
    localStorage.setItem('theme', 'dark-theme');

    const selectedTheme = 'dark-theme';

    fetch('/set-theme', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ theme: selectedTheme })
    })
    .then(response => response.json())
    .then(data => {
      if (!data.success) {
        console.error('Error setting theme on server');
      }
    })
    .catch(error => console.error('Error setting theme:', error));
  }
});

window.addEventListener('popstate', function(event) {
    const searchParams = new URLSearchParams(window.location.search);
    const searchValue = searchParams.get('s');
    if (searchValue) {
        document.getElementById('search-input').value = searchValue;
        searchOpportunities(false);
    } else {
        document.getElementById('search-input').value = '';
        window.filteredOpportunities = window.opportunityData;
        window.filteredOpportunities_1 = window.opportunityData;
        window.filteredOpportunities_2 = window.opportunityData;
        window.filteredOpportunities_3 = window.opportunityData;
        window.filteredOpportunities_4 = window.opportunityData;

        createPagination(currentPage, window.opportunityData);
        loadOpportunities(window.opportunityData, currentPage);
    }
});

document.addEventListener('DOMContentLoaded', function() {
    if (!history.state) {
        const initialUrl = `${window.location.origin}${window.location.pathname}`;
        history.replaceState({ path: initialUrl }, '', initialUrl);
    }
    
    console.log(history);
    console.log("******************************************");

    attachEventListeners();

    const searchParams = new URLSearchParams(window.location.search);
    const searchValue = searchParams.get('s');
    if (searchValue) {
        document.getElementById('search-input').value = searchValue;
        searchOpportunities();
    } else {
      createPagination(currentPage, window.opportunityData);
      loadOpportunities(window.opportunityData, currentPage);
    }
});


async function attachEventListeners() {
  const containers = document.querySelectorAll('.container');
        const popupContainer = document.querySelector('.popup-container');

        containers.forEach(container => {
                container.addEventListener('click', async function(e) {
                
                if (e.target.classList.contains('product-button-add') || e.target.classList.contains('product-button-like')) {
                    return; // Exit the event listener if a button is clicked
                }

                e.stopPropagation(); // Prevent the click from propagating to the window
                const opportunityId = this.getAttribute('Opportunity-ID');
                const opportunity = window.opportunityData[opportunityId];

                let popup = document.createElement('div');
                popup.classList.add('product-selected');
                popup.innerHTML = `
                    <p class="product-p" data-translate="true"  name="topic">${opportunity.topic}</p>
                    <h2 class="product-h1" data-translate="true"  name="title">${opportunity.title}</h2>
                    <p class="product-pl"  data-translate="true" name="location">${opportunity.location}</p>
                    <p class="product-pl"  data-translate="true" name="institution">${opportunity.institution}</p>
                    <p class="product-desc" data-translate="true"  name="longDescription">${opportunity.longDescription}</p>
                    <p class="product-p2"  data-translate="true" name="stipend">reference: ${opportunity.postBy} </p>
                    <p class="product-p2" data-translate="true"  name="stipend">stipend: $${opportunity.stipend} /month </p>
                    <p class="product-p2"  data-translate="true" name="duration">duration: ${opportunity.duration} months</p>
                    <p class="product-p2"  data-translate="true" name="mode">work-mode: ${opportunity.mode} </p>
                    <p class="product-p2"  data-translate="true" name="type">work-type: ${opportunity.type} </p>
                    <div class="product-buttons">
                        <button  data-translate="true" class="product-button-add" type="button" onclick="window.open('${opportunity.link}', '_blank')">Apply Now</button>
                        <button  data-translate="true" class="product-button-like" type="button"><span>♥</span></button>
                    </div>
                `;
                popupContainer.innerHTML = ''; // Clear any existing content
                popupContainer.appendChild(popup);
                popupContainer.style.display = 'flex'; // Show the popup container

                if (opportunity.recommend) {
                    const img = document.createElement('img');
                    img.src = 'images/recommended.png';
                    img.className = 'ribbon';
                    img.alt = '';
                    popupContainer.appendChild(img);
                }
                
                const popupHeight = popup.offsetHeight + 100; // Add 100px to the natural height
                popup.style.height = `${popupHeight}px`;

                await translateElements(popupContainer);
            });
        });

        window.addEventListener('click', function() {
            popupContainer.style.display = 'none'; // Hide the popup container
            popupContainer.innerHTML = ''; // Clear the popup content
        });

        popupContainer.addEventListener('click', function(e) {
            e.stopPropagation(); // Prevent the click from propagating to the window
        });

    }

    document.addEventListener('DOMContentLoaded', function() {
        attachEventListeners();
    });

    </script>
    <script type="module" src="VoiceNavigation.mjs"></script>
    <script type="module" src="analytics.mjs"></script>

 </body>
</html>
